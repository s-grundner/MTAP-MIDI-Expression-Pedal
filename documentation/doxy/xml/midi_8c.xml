<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="midi_8c" kind="file" language="C++">
    <compoundname>midi.c</compoundname>
    <includes refid="midi_8h" local="yes">midi.h</includes>
    <incdepgraph>
      <node id="1">
        <label>C:/Users/Smon/source/MTAP-MIDI-Guitar-Converter/firmware/MIDI-Testing/lib/midi/midi.c</label>
        <link refid="midi_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>midi.h</label>
        <link refid="midi_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>driver/gpio.h</label>
      </node>
      <node id="6">
        <label>driver/uart.h</label>
      </node>
      <node id="7">
        <label>esp_log.h</label>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structmidi__context__t" prot="public">midi_context_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="midi_8c_1a8cbacf606a13d650a7b4352a6d63ffc6" prot="public" static="no">
        <name>MIDI_BYTE_SIZE_DEFAULT</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Smon/source/MTAP-MIDI-Guitar-Converter/firmware/MIDI-Testing/lib/midi/midi.c" line="13" column="9" bodyfile="C:/Users/Smon/source/MTAP-MIDI-Guitar-Converter/firmware/MIDI-Testing/lib/midi/midi.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="midi_8c_1a185713012c0788a3e5309b017dc76228" prot="public" static="no">
        <name>MIDI_BYTE_SIZE_SHORT</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Smon/source/MTAP-MIDI-Guitar-Converter/firmware/MIDI-Testing/lib/midi/midi.c" line="14" column="9" bodyfile="C:/Users/Smon/source/MTAP-MIDI-Guitar-Converter/firmware/MIDI-Testing/lib/midi/midi.c" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="midi_8c_1a5855645fbf31fd98bce0ec481b16c667" prot="public" static="no">
        <type>struct <ref refid="structmidi__context__t" kindref="compound">midi_context_t</ref></type>
        <definition>typedef struct midi_context_t midi_context_t</definition>
        <argsstring></argsstring>
        <name>midi_context_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Smon/source/MTAP-MIDI-Guitar-Converter/firmware/MIDI-Testing/lib/midi/midi.c" line="27" column="16"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="midi_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* TAG</definition>
        <argsstring></argsstring>
        <name>TAG</name>
        <initializer>= &quot;MIDI&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Smon/source/MTAP-MIDI-Guitar-Converter/firmware/MIDI-Testing/lib/midi/midi.c" line="16" column="19" bodyfile="C:/Users/Smon/source/MTAP-MIDI-Guitar-Converter/firmware/MIDI-Testing/lib/midi/midi.c" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="midi_8c_1a258ce1de7e3223bc8b77387f4976c87e" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* MIDI_MON</definition>
        <argsstring></argsstring>
        <name>MIDI_MON</name>
        <initializer>= &quot;MIDI MONITOR&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Smon/source/MTAP-MIDI-Guitar-Converter/firmware/MIDI-Testing/lib/midi/midi.c" line="17" column="19" bodyfile="C:/Users/Smon/source/MTAP-MIDI-Guitar-Converter/firmware/MIDI-Testing/lib/midi/midi.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="midi_8c_1ac71f907a5e5b7c07d492d621cafc2bb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t midi_init</definition>
        <argsstring>(midi_context_t **out_ctx, midi_config_t *out_cfg)</argsstring>
        <name>midi_init</name>
        <param>
          <type><ref refid="structmidi__context__t" kindref="compound">midi_context_t</ref> **</type>
          <declname>out_ctx</declname>
        </param>
        <param>
          <type><ref refid="structmidi__config__t" kindref="compound">midi_config_t</ref> *</type>
          <declname>out_cfg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Smon/source/MTAP-MIDI-Guitar-Converter/firmware/MIDI-Testing/lib/midi/midi.c" line="33" column="11" bodyfile="C:/Users/Smon/source/MTAP-MIDI-Guitar-Converter/firmware/MIDI-Testing/lib/midi/midi.c" bodystart="33" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="midi_8c_1a6eff3a43d514679b4da21f8cca9e2316" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t midi_exit</definition>
        <argsstring>(midi_handle_t midi_handle)</argsstring>
        <name>midi_exit</name>
        <param>
          <type><ref refid="structmidi__context__t" kindref="compound">midi_handle_t</ref></type>
          <declname>midi_handle</declname>
        </param>
        <briefdescription>
<para>Exits MIDI and frees all resources. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>midi_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>MIDI Handle to be freed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Smon/source/MTAP-MIDI-Guitar-Converter/firmware/MIDI-Testing/lib/midi/midi.c" line="80" column="11" bodyfile="C:/Users/Smon/source/MTAP-MIDI-Guitar-Converter/firmware/MIDI-Testing/lib/midi/midi.c" bodystart="80" bodyend="86"/>
        <referencedby refid="gitcon_8c_1a34f972a4c96245ce63d26a5256c75e24" compoundref="gitcon_8c" startline="217" endline="235">gitcon_exit</referencedby>
      </memberdef>
      <memberdef kind="function" id="midi_8c_1ac6d19507fa71da416c31fbe9b38684fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t midi_write</definition>
        <argsstring>(midi_handle_t handle, midi_message_t *msg)</argsstring>
        <name>midi_write</name>
        <param>
          <type><ref refid="structmidi__context__t" kindref="compound">midi_handle_t</ref></type>
          <declname>midi_handle</declname>
          <defname>handle</defname>
        </param>
        <param>
          <type><ref refid="structmidi__message__t" kindref="compound">midi_message_t</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Writes MIDI Message to UART. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>midi_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>MIDI Handle to pass parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>MIDI Message to be sent </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Smon/source/MTAP-MIDI-Guitar-Converter/firmware/MIDI-Testing/lib/midi/midi.c" line="92" column="11" bodyfile="C:/Users/Smon/source/MTAP-MIDI-Guitar-Converter/firmware/MIDI-Testing/lib/midi/midi.c" bodystart="92" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="midi_8c_1a19339a5613e1e14bcffb4469675ec2db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t midi_read</definition>
        <argsstring>(midi_handle_t midi_handle, midi_message_t *msg, TickType_t timeout)</argsstring>
        <name>midi_read</name>
        <param>
          <type><ref refid="structmidi__context__t" kindref="compound">midi_handle_t</ref></type>
          <declname>midi_handle</declname>
        </param>
        <param>
          <type><ref refid="structmidi__message__t" kindref="compound">midi_message_t</ref> *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>TickType_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Reads MIDI Message from UART. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>midi_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>MIDI Handle to pass parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>MIDI Message to be read </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>esp_err_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Smon/source/MTAP-MIDI-Guitar-Converter/firmware/MIDI-Testing/lib/midi/midi.c" line="133" column="11" bodyfile="C:/Users/Smon/source/MTAP-MIDI-Guitar-Converter/firmware/MIDI-Testing/lib/midi/midi.c" bodystart="133" bodyend="165"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>MIDI driver for ESP32. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>@s-grundner </para>
</simplesect>
<simplesect kind="version"><para>0.1 </para>
</simplesect>
<simplesect kind="date"><para>2022-12-23</para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2022 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="midi_8h" kindref="compound">midi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIDI_BYTE_SIZE_DEFAULT<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIDI_BYTE_SIZE_SHORT<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*TAG<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;MIDI&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*MIDI_MON<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;MIDI<sp/>MONITOR&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="structmidi__context__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmidi__context__t" kindref="compound">midi_context_t</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmidi__config__t" kindref="compound">midi_config_t</ref><sp/>cfg;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}<sp/><ref refid="structmidi__context__t" kindref="compound">midi_context_t</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MIDI<sp/>CONFIG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">esp_err_t<sp/>midi_init(<ref refid="structmidi__context__t" kindref="compound">midi_context_t</ref><sp/>**out_ctx,<sp/><ref refid="structmidi__config__t" kindref="compound">midi_config_t</ref><sp/>*out_cfg)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>memory<sp/>for<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmidi__context__t" kindref="compound">midi_context_t</ref><sp/>*ctx<sp/>=<sp/>(<ref refid="structmidi__context__t" kindref="compound">midi_context_t</ref><sp/>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structmidi__context__t" kindref="compound">midi_context_t</ref>));</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ctx)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_ERR_NO_MEM;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>*ctx<sp/>=<sp/>(<ref refid="structmidi__context__t" kindref="compound">midi_context_t</ref>){</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.cfg<sp/>=<sp/>*out_cfg};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(TAG,<sp/></highlight><highlight class="stringliteral">&quot;Initializing<sp/>MIDI<sp/>on<sp/>%d<sp/>(rx:%d,<sp/>tx:%d)<sp/>with<sp/>%d<sp/>baud...&quot;</highlight><highlight class="normal">,<sp/>ctx-&gt;cfg.uart_num,<sp/>ctx-&gt;cfg.rx_io,<sp/>ctx-&gt;cfg.tx_io,<sp/>ctx-&gt;cfg.baudrate);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>UART</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_config_t<sp/>rx_pin_config<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.pin_bit_mask<sp/>=<sp/>(1ULL<sp/>&lt;&lt;<sp/>ctx-&gt;cfg.rx_io),</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mode<sp/>=<sp/>GPIO_MODE_INPUT,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.pull_up_en<sp/>=<sp/>GPIO_PULLUP_DISABLE,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.pull_down_en<sp/>=<sp/>GPIO_PULLDOWN_DISABLE,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.intr_type<sp/>=<sp/>GPIO_INTR_DISABLE};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_config_t<sp/>tx_pin_config<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.pin_bit_mask<sp/>=<sp/>(1ULL<sp/>&lt;&lt;<sp/>ctx-&gt;cfg.tx_io),</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mode<sp/>=<sp/>GPIO_MODE_OUTPUT,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.pull_up_en<sp/>=<sp/>GPIO_PULLUP_DISABLE,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.pull_down_en<sp/>=<sp/>GPIO_PULLDOWN_DISABLE,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.intr_type<sp/>=<sp/>GPIO_INTR_DISABLE};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(gpio_config(&amp;rx_pin_config));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(gpio_config(&amp;tx_pin_config));</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>uart_config_t<sp/>uart_config<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.baud_rate<sp/>=<sp/>ctx-&gt;cfg.baudrate,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.data_bits<sp/>=<sp/>UART_DATA_8_BITS,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.parity<sp/>=<sp/>UART_PARITY_DISABLE,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.stop_bits<sp/>=<sp/>UART_STOP_BITS_1,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.flow_ctrl<sp/>=<sp/>UART_HW_FLOWCTRL_DISABLE,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.source_clk<sp/>=<sp/>UART_SCLK_APB};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(uart_param_config(ctx-&gt;cfg.uart_num,<sp/>&amp;uart_config));</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(uart_set_pin(ctx-&gt;cfg.uart_num,<sp/>ctx-&gt;cfg.tx_io,<sp/>ctx-&gt;cfg.rx_io,<sp/>UART_PIN_NO_CHANGE,<sp/>UART_PIN_NO_CHANGE));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_ERROR_CHECK(uart_driver_install(ctx-&gt;cfg.uart_num,<sp/>1024<sp/>*<sp/>2,<sp/>1024<sp/>*<sp/>2,<sp/>0,<sp/>NULL,<sp/>0));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pass<sp/>configured<sp/>context<sp/>to<sp/>outer<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>*out_ctx<sp/>=<sp/>ctx;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="midi_8c_1a6eff3a43d514679b4da21f8cca9e2316" refkind="member"><highlight class="normal">esp_err_t<sp/><ref refid="midi_8c_1a6eff3a43d514679b4da21f8cca9e2316" kindref="member">midi_exit</ref>(<ref refid="structmidi__context__t" kindref="compound">midi_handle_t</ref><sp/>midi_handle)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/>err<sp/>=<sp/>ESP_OK;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>uart_driver_delete(midi_handle-&gt;cfg.uart_num);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>free(midi_handle);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/>------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MIDI<sp/>TRANSMISSIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/>------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="midi_8c_1ac6d19507fa71da416c31fbe9b38684fa" refkind="member"><highlight class="normal">esp_err_t<sp/><ref refid="midi_8c_1ac6d19507fa71da416c31fbe9b38684fa" kindref="member">midi_write</ref>(<ref refid="structmidi__context__t" kindref="compound">midi_handle_t</ref><sp/>handle,<sp/><ref refid="structmidi__message__t" kindref="compound">midi_message_t</ref><sp/>*msg)</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>data[]<sp/>=<sp/>{msg-&gt;status<sp/>|<sp/>msg-&gt;channel,<sp/>msg-&gt;param1,<sp/>msg-&gt;param2};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>switch<sp/>status<sp/>to<sp/>determine<sp/>message<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(msg-&gt;status)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MIDI_STATUS_NOTE_OFF:</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MIDI_STATUS_NOTE_ON:</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MIDI_STATUS_CONTROL_CHANGE:</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MIDI_STATUS_PITCH_BEND:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MIDI_STATUS_POLYPHONIC_KEY_PRESSURE:</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>uart_write_bytes(handle-&gt;cfg.uart_num,<sp/>data,<sp/>MIDI_BYTE_SIZE_DEFAULT);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MIDI_STATUS_PROGRAM_CHANGE:</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MIDI_STATUS_CHANNEL_PRESSURE:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>uart_write_bytes(handle-&gt;cfg.uart_num,<sp/>data,<sp/>MIDI_BYTE_SIZE_SHORT);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(TAG,<sp/></highlight><highlight class="stringliteral">&quot;midi_send:<sp/>invalid<sp/>status&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_ERR_INVALID_ARG;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(len)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>-1:</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(TAG,<sp/></highlight><highlight class="stringliteral">&quot;uart_write_bytes<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_FAIL;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(TAG,<sp/></highlight><highlight class="stringliteral">&quot;uart_write_bytes<sp/>timed<sp/>out&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_ERR_TIMEOUT;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(MIDI_MON,<sp/></highlight><highlight class="stringliteral">&quot;Status:<sp/>%02X\tChannel:<sp/>%02X\t<sp/>Data:<sp/>%02X<sp/>%02X\t<sp/>Length:%d&quot;</highlight><highlight class="normal">,<sp/>msg-&gt;status,<sp/>msg-&gt;channel,<sp/>msg-&gt;param1,<sp/>msg-&gt;param2,<sp/>len);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="midi_8c_1a19339a5613e1e14bcffb4469675ec2db" refkind="member"><highlight class="normal">esp_err_t<sp/><ref refid="midi_8c_1a19339a5613e1e14bcffb4469675ec2db" kindref="member">midi_read</ref>(<ref refid="structmidi__context__t" kindref="compound">midi_handle_t</ref><sp/>midi_handle,<sp/><ref refid="structmidi__message__t" kindref="compound">midi_message_t</ref><sp/>*msg,<sp/>TickType_t<sp/>timeout)</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>data[3];</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>uart_read_bytes(midi_handle-&gt;cfg.uart_num,<sp/>(uint8_t<sp/>*)data,<sp/>3,<sp/>timeout);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(len)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>-1:</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(TAG,<sp/></highlight><highlight class="stringliteral">&quot;uart_read_bytes<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_FAIL;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(TAG,<sp/></highlight><highlight class="stringliteral">&quot;uart_read_bytes<sp/>timeout&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_ERR_TIMEOUT;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg-&gt;status<sp/>=<sp/>data[0]<sp/>&amp;<sp/>0xF0;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg-&gt;channel<sp/>=<sp/>data[0]<sp/>&amp;<sp/>0x0F;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg-&gt;param1<sp/>=<sp/>data[1];</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg-&gt;param2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg-&gt;status<sp/>=<sp/>data[0]<sp/>&amp;<sp/>0xF0;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg-&gt;channel<sp/>=<sp/>data[0]<sp/>&amp;<sp/>0x0F;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg-&gt;param1<sp/>=<sp/>data[1];</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg-&gt;param2<sp/>=<sp/>data[2];</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(TAG,<sp/></highlight><highlight class="stringliteral">&quot;uart_read_bytes<sp/>invalid<sp/>message&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_ERR_INVALID_ARG;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ESP_OK;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Smon/source/MTAP-MIDI-Guitar-Converter/firmware/MIDI-Testing/lib/midi/midi.c"/>
  </compounddef>
</doxygen>
