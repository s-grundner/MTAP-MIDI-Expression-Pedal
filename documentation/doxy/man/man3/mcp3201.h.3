.TH "C:/Users/Smon/source/MTAP-MIDI-Guitar-Converter/firmware/MIDI-Testing/lib/mcp3201/mcp3201.h" 3 "Wed Mar 8 2023" "Gitcon" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/Users/Smon/source/MTAP-MIDI-Guitar-Converter/firmware/MIDI-Testing/lib/mcp3201/mcp3201.h
.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include 'freertos/FreeRTOS\&.h'\fP
.br
\fC#include 'freertos/task\&.h'\fP
.br
\fC#include 'freertos/queue\&.h'\fP
.br
\fC#include 'driver/gpio\&.h'\fP
.br
\fC#include 'driver/spi_master\&.h'\fP
.br
\fC#include 'hal/spi_types\&.h'\fP
.br
\fC#include 'esp_log\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBmcp3201_config_t\fP"
.br
.ti -1c
.RI "struct \fBmcp3201_sampler_t\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBADC_CLK\fP   SPI_MASTER_FREQ_8M"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBmcp3201_context_t\fP * \fBmcp3201_handle_t\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "esp_err_t \fBmcp3201_init\fP (\fBmcp3201_handle_t\fP *out_handle, const \fBmcp3201_config_t\fP *cfg)"
.br
.RI "Initializes the MCP3201 ADC device\&. "
.ti -1c
.RI "esp_err_t \fBmcp3201_exit\fP (\fBmcp3201_handle_t\fP mcp_handle)"
.br
.RI "Exits the MCP3201 ADC device and frees all resources\&. "
.ti -1c
.RI "esp_err_t \fBmcp3201_read\fP (\fBmcp3201_handle_t\fP handle, uint16_t *out_value)"
.br
.RI "Reads a single value from the MCP3201 ADC\&. "
.ti -1c
.RI "\fBmcp3201_sampler_t\fP * \fBmcp3201_sampler_start\fP (\fBmcp3201_handle_t\fP mcp_handle, QueueHandle_t recv_queue, const size_t buffer_size, const size_t f_sample)"
.br
.RI "Starts the MCP3201 Sampler, which samples continuously and puts the samples into a queue\&. "
.ti -1c
.RI "void \fBmcp3201_sampler_stop\fP (\fBmcp3201_sampler_t\fP *sampler)"
.br
.RI "Stops the MCP3201 Sampler\&. "
.in -1c
.SH "Detailed Description"
.PP 

.PP
\fBAuthor\fP
.RS 4
@s-grundner 
.RE
.PP
\fBVersion\fP
.RS 4
0\&.1 
.RE
.PP
\fBDate\fP
.RS 4
2022-12-24
.RE
.PP
\fBCopyright\fP
.RS 4
Copyright (c) 2022 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "esp_err_t mcp3201_exit (\fBmcp3201_handle_t\fP mcp_handle)"

.PP
Exits the MCP3201 ADC device and frees all resources\&. 
.PP
\fBParameters\fP
.RS 4
\fImcp_handle\fP MCP3201 Device to exit 
.RE
.PP
\fBReturns\fP
.RS 4
ESP_OK on success 
.RE
.PP

.SS "esp_err_t mcp3201_init (\fBmcp3201_handle_t\fP * out_handle, const \fBmcp3201_config_t\fP * cfg)"

.PP
Initializes the MCP3201 ADC device\&. 
.PP
\fBParameters\fP
.RS 4
\fIout_handle\fP MCP3201 Handler to store initialization data 
.br
\fIcfg\fP MCP3201 Configuration 
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.SS "esp_err_t mcp3201_read (\fBmcp3201_handle_t\fP handle, uint16_t * out_value)"

.PP
Reads a single value from the MCP3201 ADC\&. 
.PP
\fBParameters\fP
.RS 4
\fIhandle\fP MCP3201 Device 
.br
\fIout_value\fP Value 
.RE
.PP
\fBReturns\fP
.RS 4
ESP_OK on success 
.RE
.PP

.SS "\fBmcp3201_sampler_t\fP * mcp3201_sampler_start (\fBmcp3201_handle_t\fP mcp_handle, QueueHandle_t recv_queue, const size_t buffer_size, const size_t f_sample)"

.PP
Starts the MCP3201 Sampler, which samples continuously and puts the samples into a queue\&. 
.PP
\fBParameters\fP
.RS 4
\fImcp_handle\fP MCP3201 Device Handler 
.br
\fIrecv_queue\fP queue to send the samples into 
.br
\fIbuffer_size\fP size of the audio buffer 
.br
\fIf_sample\fP Sample rate 
.RE
.PP
\fBReturns\fP
.RS 4
mcp3201_sampler_t* Sampler Handler 
.RE
.PP

.SS "void mcp3201_sampler_stop (\fBmcp3201_sampler_t\fP * sampler)"

.PP
Stops the MCP3201 Sampler\&. 
.PP
\fBParameters\fP
.RS 4
\fIsampler\fP Sampler Handler 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Gitcon from the source code\&.
