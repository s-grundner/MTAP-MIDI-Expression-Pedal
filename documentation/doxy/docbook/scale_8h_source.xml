<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_scale_8h_source" xml:lang="en-US">
<title>scale.h</title>
<indexterm><primary>C:/Users/Smon/source/MTAP-MIDI-Guitar-Converter/firmware/MIDI-Testing/lib/audio/scale.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 
12 <emphasis role="preprocessor">#ifndef&#32;SCALE_H_</emphasis>
13 <emphasis role="preprocessor">#define&#32;SCALE_H_</emphasis>
14 
15 <emphasis role="preprocessor">#include&#32;&quot;inttypes.h&quot;</emphasis>
16 <emphasis role="preprocessor">#include&#32;&lt;math.h&gt;</emphasis>
17 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
18 
19 <emphasis role="preprocessor">#define&#32;CONCERT_PITCH&#32;440.0</emphasis>
20 <emphasis role="preprocessor">#define&#32;ADC_MAX_VAL&#32;255.0</emphasis>
21 <emphasis role="preprocessor">#define&#32;A0_NUM&#32;49</emphasis>
22 
23 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>
24 {
25 &#32;&#32;&#32;&#32;KEY_A&#32;=&#32;0,
26 &#32;&#32;&#32;&#32;KEY_AS&#32;=&#32;1,
27 &#32;&#32;&#32;&#32;KEY_B&#32;=&#32;2,
28 &#32;&#32;&#32;&#32;KEY_C&#32;=&#32;3,
29 &#32;&#32;&#32;&#32;KEY_CS&#32;=&#32;4,
30 &#32;&#32;&#32;&#32;KEY_D&#32;=&#32;5,
31 &#32;&#32;&#32;&#32;KEY_DS&#32;=&#32;6,
32 &#32;&#32;&#32;&#32;KEY_E&#32;=&#32;7,
33 &#32;&#32;&#32;&#32;KEY_F&#32;=&#32;8,
34 &#32;&#32;&#32;&#32;KEY_FS&#32;=&#32;9,
35 &#32;&#32;&#32;&#32;KEY_G&#32;=&#32;10,
36 &#32;&#32;&#32;&#32;KEY_GS&#32;=&#32;11,
37 }&#32;key_name_t;
38 
39 <emphasis role="preprocessor">#define&#32;MODAL_COUNT&#32;4</emphasis>
40 
48 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>
49 {
50 &#32;&#32;&#32;&#32;MAJ&#32;=&#32;0,
51 &#32;&#32;&#32;&#32;MIN&#32;=&#32;1,
52 &#32;&#32;&#32;&#32;HMJ&#32;=&#32;2,
53 &#32;&#32;&#32;&#32;HMN&#32;=&#32;3,
54 }&#32;<link linkend="_scale_8h_1a6edfc50fa1ad976c9cbf84ac859c4b54">modal_name_t</link>;
55 
62 <emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_scale_8h_1a7e5dced1f4ec1583890131af61b49f07">get_pitch_hz</link>(uint8_t&#32;key_num);
63 
70 uint8_t&#32;<link linkend="_scale_8h_1ad264c4b750e8922861e5c3f56d67acc6">get_key_num</link>(<emphasis role="keywordtype">double</emphasis>&#32;freq);
71 
77 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_scale_8h_1a7ad1b3de87418feaa674a96009e80d92">print_key_name</link>(uint8_t&#32;key_num);
78 
86 <emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_scale_8h_1a5c4ac05d54321fd52a582ce3493f5e3a">adc_to_pitch</link>(uint8_t&#32;adc_val,&#32;uint8_t&#32;oct_offset);
87 
95 uint8_t&#32;<link linkend="_scale_8h_1ab3708331e3a3f78b08549a23c0ef249a">adc_to_num</link>(uint8_t&#32;adc_val,&#32;uint8_t&#32;oct_offset);
96 
103 <emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_scale_8h_1abe9622ab264356cf01526b06f5da996d">get_key_name</link>(uint8_t&#32;key_num);
104 
111 <emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_scale_8h_1a3f0fe955807ea6ce77a5d46e557c00c4">get_modal_name</link>(uint8_t&#32;modal_num);
112 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;SCALE_H_</emphasis>
</programlisting></section>
