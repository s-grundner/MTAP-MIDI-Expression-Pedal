<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_midi_8c" xml:lang="en-US">
<title>C:/Users/Smon/source/MTAP-MIDI-Guitar-Converter/firmware/MIDI-Testing/lib/midi/midi.c File Reference</title>
<indexterm><primary>C:/Users/Smon/source/MTAP-MIDI-Guitar-Converter/firmware/MIDI-Testing/lib/midi/midi.c</primary></indexterm>
<para>

<para>MIDI driver for ESP32. </para>
 
</para>
<programlisting linenumbering="unnumbered">#include &quot;midi.h&quot;<?linebreak?></programlisting>Include dependency graph for midi.c:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="midi_8c__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Data Structures    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_structmidi__context__t">midi_context_t</link></para>

<para>MIDI Context (internal! not to be accessed externally, use midi_handle_t instead) </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_midi_8c_1a8cbacf606a13d650a7b4352a6d63ffc6"/>#define <emphasis role="strong">MIDI_BYTE_SIZE_DEFAULT</emphasis>&#160;&#160;&#160;3</para>
</listitem>
            <listitem><para><anchor xml:id="_midi_8c_1a185713012c0788a3e5309b017dc76228"/>#define <emphasis role="strong">MIDI_BYTE_SIZE_SHORT</emphasis>&#160;&#160;&#160;2</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_midi_8c_1a5855645fbf31fd98bce0ec481b16c667"/>typedef struct <link linkend="_structmidi__context__t">midi_context_t</link> <emphasis role="strong">midi_context_t</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_midi_8c_1ac71f907a5e5b7c07d492d621cafc2bb4"/>esp_err_t <emphasis role="strong">midi_init</emphasis> (<link linkend="_structmidi__context__t">midi_context_t</link> **out_ctx, <link linkend="_structmidi__config__t">midi_config_t</link> *out_cfg)</para>
</listitem>
            <listitem><para>esp_err_t <link linkend="_midi_8c_1a6eff3a43d514679b4da21f8cca9e2316">midi_exit</link> (<link linkend="_structmidi__context__t">midi_handle_t</link> midi_handle)</para>

<para>Exits MIDI and frees all resources. </para>
</listitem>
            <listitem><para>esp_err_t <link linkend="_midi_8c_1ac6d19507fa71da416c31fbe9b38684fa">midi_write</link> (<link linkend="_structmidi__context__t">midi_handle_t</link> handle, <link linkend="_structmidi__message__t">midi_message_t</link> *msg)</para>

<para>Writes MIDI Message to UART. </para>
</listitem>
            <listitem><para>esp_err_t <link linkend="_midi_8c_1a19339a5613e1e14bcffb4469675ec2db">midi_read</link> (<link linkend="_structmidi__context__t">midi_handle_t</link> midi_handle, <link linkend="_structmidi__message__t">midi_message_t</link> *msg, TickType_t timeout)</para>

<para>Reads MIDI Message from UART. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>MIDI driver for ESP32. </para>

<para><formalpara><title>Author</title>

<para>@s-grundner </para>
</formalpara>
<formalpara><title>Version</title>

<para>0.1 </para>
</formalpara>
<formalpara><title>Date</title>

<para>2022-12-23</para>
</formalpara>
<formalpara><title>Copyright</title>

<para>Copyright (c) 2022 </para>
</formalpara>
</para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_midi_8c_1a6eff3a43d514679b4da21f8cca9e2316"/><section>
    <title>midi_exit()</title>
<indexterm><primary>midi_exit</primary><secondary>midi.c</secondary></indexterm>
<indexterm><primary>midi.c</primary><secondary>midi_exit</secondary></indexterm>
<para><computeroutput>esp_err_t midi_exit (<link linkend="_structmidi__context__t">midi_handle_t</link> midi_handle)</computeroutput></para><para>

<para>Exits MIDI and frees all resources. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>midi_handle</entry><entry>
<para>MIDI Handle to be freed </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>esp_err_t </para>
</formalpara>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="midi_8c_a6eff3a43d514679b4da21f8cca9e2316_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_midi_8c_1a19339a5613e1e14bcffb4469675ec2db"/><section>
    <title>midi_read()</title>
<indexterm><primary>midi_read</primary><secondary>midi.c</secondary></indexterm>
<indexterm><primary>midi.c</primary><secondary>midi_read</secondary></indexterm>
<para><computeroutput>esp_err_t midi_read (<link linkend="_structmidi__context__t">midi_handle_t</link> midi_handle, <link linkend="_structmidi__message__t">midi_message_t</link> * msg, TickType_t timeout)</computeroutput></para><para>

<para>Reads MIDI Message from UART. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>midi_handle</entry><entry>
<para>MIDI Handle to pass parameters </para>
</entry>
                            </row>
                            <row>
<entry>msg</entry><entry>
<para>MIDI Message to be read </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>esp_err_t </para>
</formalpara>
</para>
</section>
<anchor xml:id="_midi_8c_1ac6d19507fa71da416c31fbe9b38684fa"/><section>
    <title>midi_write()</title>
<indexterm><primary>midi_write</primary><secondary>midi.c</secondary></indexterm>
<indexterm><primary>midi.c</primary><secondary>midi_write</secondary></indexterm>
<para><computeroutput>esp_err_t midi_write (<link linkend="_structmidi__context__t">midi_handle_t</link> midi_handle, <link linkend="_structmidi__message__t">midi_message_t</link> * msg)</computeroutput></para><para>

<para>Writes MIDI Message to UART. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>midi_handle</entry><entry>
<para>MIDI Handle to pass parameters </para>
</entry>
                            </row>
                            <row>
<entry>msg</entry><entry>
<para>MIDI Message to be sent </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>esp_err_t </para>
</formalpara>
</para>
</section>
</section>
</section>
