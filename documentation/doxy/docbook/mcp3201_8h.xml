<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_mcp3201_8h" xml:lang="en-US">
<title>C:/Users/Smon/source/MTAP-MIDI-Guitar-Converter/firmware/MIDI-Testing/lib/mcp3201/mcp3201.h File Reference</title>
<indexterm><primary>C:/Users/Smon/source/MTAP-MIDI-Guitar-Converter/firmware/MIDI-Testing/lib/mcp3201/mcp3201.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;stdio.h&gt;<?linebreak?>#include &quot;freertos/FreeRTOS.h&quot;<?linebreak?>#include &quot;freertos/task.h&quot;<?linebreak?>#include &quot;freertos/queue.h&quot;<?linebreak?>#include &quot;driver/gpio.h&quot;<?linebreak?>#include &quot;driver/spi_master.h&quot;<?linebreak?>#include &quot;hal/spi_types.h&quot;<?linebreak?>#include &quot;esp_log.h&quot;<?linebreak?></programlisting>Include dependency graph for mcp3201.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="mcp3201_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
This graph shows which files directly or indirectly include this file:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="mcp3201_8h__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Data Structures    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_structmcp3201__config__t">mcp3201_config_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structmcp3201__sampler__t">mcp3201_sampler_t</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_mcp3201_8h_1a44d38ab4d4e88e679184bbbffdac00dd"/>#define <emphasis role="strong">ADC_CLK</emphasis>&#160;&#160;&#160;SPI_MASTER_FREQ_8M</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_mcp3201_8h_1a394f6b43329fb768aeb634cdfee4ebef"/>typedef struct <link linkend="_structmcp3201__context__t">mcp3201_context_t</link> * <emphasis role="strong">mcp3201_handle_t</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>esp_err_t <link linkend="_mcp3201_8h_1a69c1d4c194693ad14af26415e51cd4d5">mcp3201_init</link> (<link linkend="_structmcp3201__context__t">mcp3201_handle_t</link> *out_handle, const <link linkend="_structmcp3201__config__t">mcp3201_config_t</link> *cfg)</para>

<para>Initializes the MCP3201 ADC device. </para>
</listitem>
            <listitem><para>esp_err_t <link linkend="_mcp3201_8h_1acacc7f3f14eb9108f7c053d4cc370e00">mcp3201_exit</link> (<link linkend="_structmcp3201__context__t">mcp3201_handle_t</link> mcp_handle)</para>

<para>Exits the MCP3201 ADC device and frees all resources. </para>
</listitem>
            <listitem><para>esp_err_t <link linkend="_mcp3201_8h_1ad2a98b7c4cafab98b390b467b976cc9f">mcp3201_read</link> (<link linkend="_structmcp3201__context__t">mcp3201_handle_t</link> handle, uint16_t *out_value)</para>

<para>Reads a single value from the MCP3201 ADC. </para>
</listitem>
            <listitem><para><link linkend="_structmcp3201__sampler__t">mcp3201_sampler_t</link> * <link linkend="_mcp3201_8h_1a597661bdfb234321b4ba0648dc161451">mcp3201_sampler_start</link> (<link linkend="_structmcp3201__context__t">mcp3201_handle_t</link> mcp_handle, QueueHandle_t recv_queue, const size_t buffer_size, const size_t f_sample)</para>

<para>Starts the MCP3201 Sampler, which samples continuously and puts the samples into a queue. </para>
</listitem>
            <listitem><para>void <link linkend="_mcp3201_8h_1a09942c72d6880306a561ca69a5ecac80">mcp3201_sampler_stop</link> (<link linkend="_structmcp3201__sampler__t">mcp3201_sampler_t</link> *sampler)</para>

<para>Stops the MCP3201 Sampler. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para><formalpara><title>Author</title>

<para>@s-grundner </para>
</formalpara>
<formalpara><title>Version</title>

<para>0.1 </para>
</formalpara>
<formalpara><title>Date</title>

<para>2022-12-24</para>
</formalpara>
<formalpara><title>Copyright</title>

<para>Copyright (c) 2022 </para>
</formalpara>
</para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_mcp3201_8h_1acacc7f3f14eb9108f7c053d4cc370e00"/><section>
    <title>mcp3201_exit()</title>
<indexterm><primary>mcp3201_exit</primary><secondary>mcp3201.h</secondary></indexterm>
<indexterm><primary>mcp3201.h</primary><secondary>mcp3201_exit</secondary></indexterm>
<para><computeroutput>esp_err_t mcp3201_exit (<link linkend="_structmcp3201__context__t">mcp3201_handle_t</link> mcp_handle)</computeroutput></para><para>

<para>Exits the MCP3201 ADC device and frees all resources. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mcp_handle</entry><entry>
<para>MCP3201 Device to exit </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>ESP_OK on success </para>
</formalpara>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="mcp3201_8h_acacc7f3f14eb9108f7c053d4cc370e00_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_mcp3201_8h_1a69c1d4c194693ad14af26415e51cd4d5"/><section>
    <title>mcp3201_init()</title>
<indexterm><primary>mcp3201_init</primary><secondary>mcp3201.h</secondary></indexterm>
<indexterm><primary>mcp3201.h</primary><secondary>mcp3201_init</secondary></indexterm>
<para><computeroutput>esp_err_t mcp3201_init (<link linkend="_structmcp3201__context__t">mcp3201_handle_t</link> * out_handle, const <link linkend="_structmcp3201__config__t">mcp3201_config_t</link> * cfg)</computeroutput></para><para>

<para>Initializes the MCP3201 ADC device. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>out_handle</entry><entry>
<para>MCP3201 Handler to store initialization data </para>
</entry>
                            </row>
                            <row>
<entry>cfg</entry><entry>
<para>MCP3201 Configuration </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para></para>
</formalpara>
</para>
</section>
<anchor xml:id="_mcp3201_8h_1ad2a98b7c4cafab98b390b467b976cc9f"/><section>
    <title>mcp3201_read()</title>
<indexterm><primary>mcp3201_read</primary><secondary>mcp3201.h</secondary></indexterm>
<indexterm><primary>mcp3201.h</primary><secondary>mcp3201_read</secondary></indexterm>
<para><computeroutput>esp_err_t mcp3201_read (<link linkend="_structmcp3201__context__t">mcp3201_handle_t</link> handle, uint16_t * out_value)</computeroutput></para><para>

<para>Reads a single value from the MCP3201 ADC. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry><entry>handle</entry><entry>
<para>MCP3201 Device </para>
</entry>
                            </row>
                            <row>
<entry>out</entry><entry>out_value</entry><entry>
<para>Value </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>ESP_OK on success </para>
</formalpara>
</para>
</section>
<anchor xml:id="_mcp3201_8h_1a597661bdfb234321b4ba0648dc161451"/><section>
    <title>mcp3201_sampler_start()</title>
<indexterm><primary>mcp3201_sampler_start</primary><secondary>mcp3201.h</secondary></indexterm>
<indexterm><primary>mcp3201.h</primary><secondary>mcp3201_sampler_start</secondary></indexterm>
<para><computeroutput><link linkend="_structmcp3201__sampler__t">mcp3201_sampler_t</link> * mcp3201_sampler_start (<link linkend="_structmcp3201__context__t">mcp3201_handle_t</link> mcp_handle, QueueHandle_t recv_queue, const size_t buffer_size, const size_t f_sample)</computeroutput></para><para>

<para>Starts the MCP3201 Sampler, which samples continuously and puts the samples into a queue. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mcp_handle</entry><entry>
<para>MCP3201 Device Handler </para>
</entry>
                            </row>
                            <row>
<entry>recv_queue</entry><entry>
<para>queue to send the samples into </para>
</entry>
                            </row>
                            <row>
<entry>buffer_size</entry><entry>
<para>size of the audio buffer </para>
</entry>
                            </row>
                            <row>
<entry>f_sample</entry><entry>
<para>Sample rate </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>mcp3201_sampler_t* Sampler Handler </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="mcp3201_8h_a597661bdfb234321b4ba0648dc161451_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="mcp3201_8h_a597661bdfb234321b4ba0648dc161451_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_mcp3201_8h_1a09942c72d6880306a561ca69a5ecac80"/><section>
    <title>mcp3201_sampler_stop()</title>
<indexterm><primary>mcp3201_sampler_stop</primary><secondary>mcp3201.h</secondary></indexterm>
<indexterm><primary>mcp3201.h</primary><secondary>mcp3201_sampler_stop</secondary></indexterm>
<para><computeroutput>void mcp3201_sampler_stop (<link linkend="_structmcp3201__sampler__t">mcp3201_sampler_t</link> * sampler)</computeroutput></para><para>

<para>Stops the MCP3201 Sampler. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>sampler</entry><entry>
<para>Sampler Handler </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="mcp3201_8h_a09942c72d6880306a561ca69a5ecac80_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="mcp3201_8h_a09942c72d6880306a561ca69a5ecac80_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
